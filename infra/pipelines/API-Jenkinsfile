pipeline {
    agent any
    stages {
        stage('Checkout Main Repo') {
            steps {
                checkout scm
            }
        }
        stage('Move .env File') {
            steps {
                script{
                    sh "cp ../environments/back/.env api/.env"
                    sh "mkdir -p api/src/main/resources"
                    // find 명령어를 사용하여 .yml 파일을  찾고, 각 파일에 대해 cp 명령어를 실행
                    sh "cp ../environments/back/egg-log-service.yml api/src/main/resources/application.yml"
                    sh "cp ../environments/back/eggLogPrivateKey.jks api/src/main/resources/eggLogPrivateKey.jks"
                    sh "cp ../environments/back/firebaseSocon.pem api/src/main/resources/firebaseSocon.pem"
                    sh "cp ../environments/gradle.properties api/gradle.properties"
                }
            }
        }
        stage('Setup Environment') {
            steps {
                script{
                    sh "chmod +x ./api/gradlew"
                }
            }
        }
        stage("Build & Run") {
            steps {
                dir("api"){
                    script {
                        try {
                            sh "docker-compose up -d --build"
                        }catch (Exception e) {
                            sh "echo '빌드에 실패했습니다.'"
                            sh "docker-compose down"
                            sh "docker-compose up -d"
                        }
                    }
                }
            }
        }
        stage('Prune old images'){
            steps{
                script{
                    sh "yes | docker system prune --filter until=1h"
                }
            }
        }
    }
    post {
        always {
            script {
                def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend (color: currentBuild.currentResult=='SUCCESS'?'good':'danger',
                        message: "빌드 ${currentBuild.currentResult}: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)",
                        endpoint: 'https://meeting.ssafy.com/hooks/65u7o3o7kfb87dqcs8cxyzbdpo',
                        channel: 'Jenkins'
                )
            }
        }
    }
}

